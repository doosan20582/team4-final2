<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goott.mapper.DrawAdminMapper">
	<select id="draw_admin" resultType="hashMap">
	
	<!-- draw_amdin 퀴리  -->
		<![CDATA[
		  select p.product_name,p.product_price,p.product_id,
				  d.draw_reqruit, d.draw_event_start_date, d.draw_event_end_date,
		           d.draw_pur_start_date, d.draw_pur_end_date, d.draw_comment,d.draw_id,d.product_img_url1,d.draw_deadline from t_draw as 
	       d join t_product as p on d.product_id = p.product_id order by d.draw_id desc;
		]]>
	</select>
	<!--draw_admin_chage의 쿼리  -->
		<select id="draw_admin_change" resultType="hashMap">
		<![CDATA[
		  select p.product_name,p.product_price,p.product_id,p.product_img_url1, 
				  d.draw_reqruit, d.draw_event_start_date, d.draw_event_end_date,
		           d.draw_pur_start_date, d.draw_pur_end_date, d.draw_comment,d.draw_id,d.draw_deadline from t_draw as 
	       d join t_product as p on d.product_id = p.product_id and draw_id=#{draw_id};
		]]>
	</select>
	
		<!--draw_customer의 쿼리  -->
		<select id="draw_customer" resultType="com.goott.domain.DrawVO">
		<![CDATA[
			select product_img_url1,draw_id, draw_title, draw_price, product_id,
				   draw_reqruit, draw_event_start_date, draw_event_end_date,
		           draw_pur_start_date, draw_pur_end_date, draw_comment,draw_deadline 
		      from t_draw order by draw_id desc;
		]]>
	</select>
		<!--draw_admin_add 에이젝스 브랜드 이름 불러오기  -->
	<select id="draw_admin_add_plus" parameterType="_int" resultType="hashMap">
	<![CDATA[
      
         select b.product_brand_name, b.product_brand_id,p.product_category_id, p.product_id, p.product_name, p.product_price,p.product_img_url1 from t_product as 
	       p join t_product_brand as b on b.product_brand_id = p.product_brand_id and p.product_category_id=#{product_category_id}
	       and  p.product_limited = '한정판'  order by p.product_category_id ;
      
     ]]>
	</select>
	  
	<!--draw_admin_add 에이젝스 프로덕트 이름 불러오기  -->
		<select id="draw_admin_add_plus_product"  parameterType="hashMap" resultType="hashMap">
		 <![CDATA[ 
		 select b.product_brand_name, b.product_brand_id, p.product_id, p.product_name, p.product_price,p.product_category_id,p.product_img_url1 from t_product as 
	       p join t_product_brand as b on b.product_brand_id = p.product_brand_id and p.product_category_id=#{product_category_id} 
	       and b.product_brand_name=#{product_brand_name} and p.product_limited = '한정판'  order by p.product_category_id ;
     ]]>   
	</select>  
	
	<!--draw_admin_add 홈페이지에 상품이름 불러오기  -->
	  <select id="admin_add_plus_product_name" parameterType="hashMap" resultType="hashMap">
      <![CDATA[  
	    select b.product_brand_name, b.product_brand_id, p.product_id, p.product_name, p.product_price,p.product_category_id,p.product_img_url1 from t_product as 
	       p join t_product_brand as b on b.product_brand_id = p.product_brand_id and p.product_category_id=#{product_category_id} 
	       and b.product_brand_name=#{product_brand_name} and p.product_limited = '한정판'  order by p.product_category_id ;
     ]]>   
   </select>
   
   	<!--draw_admin_add 홈페이지에 상품가격 불러오기  -->
     <select id="admin_add_plus_product_price" parameterType="hashMap" resultType="hashMap">
      <![CDATA[  
	    select b.product_brand_name, b.product_brand_id, p.product_id, p.product_name, p.product_price,p.product_category_id,p.product_img_url1 from t_product as 
	       p join t_product_brand as b on b.product_brand_id = p.product_brand_id and p.product_category_id=#{product_category_id} 
	       and b.product_brand_name=#{product_brand_name} and p.product_limited = '한정판'  order by p.product_category_id ;
     ]]>   
   </select>
   
   	<!--draw_admin_add 홈페이지에 상품아이디 불러오기  -->
     <select id="admin_title_product_id" parameterType="hashMap" resultType="hashMap">
      <![CDATA[  
	    select b.product_brand_name, b.product_brand_id, p.product_id, p.product_name, p.product_price,p.product_category_id,p.product_img_url1 from t_product as 
	       p join t_product_brand as b on b.product_brand_id = p.product_brand_id and p.product_category_id=#{product_category_id} 
	       and b.product_brand_name=#{product_brand_name} and p.product_limited = '한정판'  order by p.product_category_id ;
     ]]>   
    
   </select>
   
    
   	<!--draw_admin_add 홈페이지에 상품이미지 불러오기  -->
     <select id="admin_title_product_img" parameterType="hashMap" resultType="hashMap">
      <![CDATA[  
	    select b.product_brand_name, b.product_brand_id, p.product_id, p.product_name, p.product_price,p.product_category_id,p.product_img_url1 from t_product as 
	       p join t_product_brand as b on b.product_brand_id = p.product_brand_id and p.product_category_id=#{product_category_id} 
	       and b.product_brand_name=#{product_brand_name} and p.product_limited = '한정판'  order by p.product_category_id ;
     ]]>   
    
   </select>
   	<!--draw_admin_add 드로우 상품 추가하기  -->
   		<insert id="draw_admin_add" parameterType="com.goott.domain.DrawVO">
   		<![CDATA[
		insert into t_draw(draw_title, product_id, draw_price,draw_event_start_date, draw_event_end_date,
		 draw_comment,draw_pur_start_date, draw_pur_end_date, draw_reqruit,product_img_url1,draw_deadline ) values (#{draw_title}, #{product_id}, #{draw_price}, #{draw_event_start_date},  #{draw_event_end_date},  #{draw_comment},  #{draw_pur_start_date},
		 #{draw_pur_end_date},#{draw_reqruit},#{product_img_url1},#{draw_deadline});
		 ]]>
	</insert>
	<!--draw_admin_change 상품이름값 불러오기  -->
	<select id="set_draw_id" parameterType="_int" resultType="int">
 
	    select draw_id from t_draw where product_id=#{product_id}; 
    
   </select>
   	<!--draw_admin_change 업데이트 하기  -->
   <update id="update" parameterType="com.goott.domain.DrawVO">
		update t_draw
		set product_img_url1=#{product_img_url1}, draw_id=#{draw_id}, draw_title=#{draw_title},draw_price=#{draw_price}, draw_event_start_date=#{draw_event_start_date}, draw_event_end_date=#{draw_event_end_date}, 
		draw_comment=#{draw_comment}, draw_pur_start_date=#{draw_pur_start_date},draw_pur_end_date=#{draw_pur_end_date},draw_reqruit=#{draw_reqruit},draw_deadline=#{draw_deadline}
		where draw_id=#{draw_id};
	</update> 
   
   	<!--draw_admin 상품 삭제하기  -->
	 <delete id="delete" parameterType="com.goott.domain.DrawVO" >
      <![CDATA[  
	   delete from t_draw where draw_id=#{draw_id};
     ]]>   
   </delete>
   
   <!--draw_admin_count의 쿼리  -->
		<select id="admin_count" resultType="hashMap">
		<![CDATA[
		 select member_id from t_draw_enter
		 where draw_id=#{draw_id};
		]]>
	</select>  
	
	   <!--draw_admin_count_vo의 쿼리  -->
	<insert id="draw_admin_count" parameterType="hashMap">
			insert into t_draw_result(draw_id,member_id,draw_result_winning) values (#{draw_id}, #{member_id}, "당첨" );
	</insert>
	
	 <select id="draw_admin_button_check" parameterType="hashMap" resultType="int">
    	select count(*) from t_draw_result where draw_id = #{draw_id} and member_id = #{member_id}
    </select>
	
  <select id="draw_customer_button_check" parameterType="hashMap" resultType="int">
    	select count(*) from t_draw_enter where draw_id = #{draw_id} and member_id = #{member_id}
    </select>
    
     <select id="draw_customer_button" parameterType="hashMap">
    	insert into t_draw_enter(draw_id, member_id) values(#{draw_id}, #{member_id})
    </select>
    
    	<!-- 진행 주문 정보 가져오기 -->
	<select id="getRusultID"  resultType="com.goott.domain.DrawResultVO">
			select member_id,draw_id
			from t_draw_result;
	</select>
    
    <select id="getdrawlist"  resultType="hashMap">
			select member_id
			from t_draw_result where draw_id = #{draw_id};
	</select>
	
	<select id="customer_draw_event" parameterType="_int" resultType="hashMap">
			select member_id
			from t_draw_result where draw_id = #{draw_id}
	</select>
	
	 <!-- 당첨시킨 회원 응모 테이블에서 삭제 -->
	 <delete id="deleteWinningMember" parameterType="map">
	 	<![CDATA[
	 		delete from t_draw_enter where draw_id = #{draw_id} and member_id = #{member_id}
	 	]]>
	 </delete>
    <!-- 당첨 구매 대기중인 회원 알아내기 -->
    <select id="winningCustomerCheck" parameterType="hashMap" resultType="int">
    	select count(*) from t_draw_result where draw_id = #{draw_id} and member_id = #{member_id}
    </select>
 
			
		
	


    
   
	
	
   
</mapper>